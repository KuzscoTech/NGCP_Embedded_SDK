#include <stdio.h>
#include "xil_printf.h"
#include "sleep.h"
#include "driveMotor_utilities.h"

#define STATE_RAMP_UP    1
#define STATE_RAMP_DOWN  2




int main()
{
	printf("Device initialized!\r\n");

	// VARIABLE DECLARATION
	int Status;
	ugv_driveMotor driveMotorInst;
	ugv_qei        driveMotorQeiInst;
	ugv_pwm        driveMotorPwmInst;
    PIDController  driveMotorPidInst;

	// DRIVE MOTOR INSTANCE INIT
	Status = driveMotor_Initialize(&driveMotorInst, &driveMotorPwmInst,
				                   &driveMotorQeiInst, &driveMotorPidInst);
	if(Status != XST_SUCCESS) {
		printf("Drive motor initialization failed!\r\n");
		return XST_FAILURE;
	}

	// MOTOR CONTROL PARAMETERS
	int   TEST_STATE;
	u8    driveMotor_manualDuty = 0;
	_Bool driveMotor_manualDir  = DRIVEMOTOR_FORWARD;

	// MAIN LOOP
	while(1)
	{
		driveMotor_manualSetDutyDir(&driveMotorInst, driveMotor_manualDuty, driveMotor_manualDir);

		// state machine
		switch (TEST_STATE)
		{
			case STATE_RAMP_UP:
				driveMotor_manualDuty += 5;
				driveMotor_printStatus(&driveMotorInst);
				if(driveMotor_manualDuty == 255) {
					TEST_STATE = STATE_RAMP_DOWN;
				}

			case STATE_RAMP_DOWN:
				driveMotor_manualDuty -= 1;
				driveMotor_printStatus(&driveMotorInst);
				if(driveMotor_manualDuty == 0) {
					driveMotor_manualDir = !driveMotor_manualDir;
					TEST_STATE = STATE_RAMP_UP;
				}
		}
	}
}
