#include <stdio.h>
#include "xil_printf.h"
#include "sleep.h"
#include "driveMotor_utilities.h"

#define STATE_FWD_RAMP_UP    1
#define STATE_FWD_RAMP_DOWN  2
#define STATE_REV_RAMP_UP    3
#define STATE_REV_RAMP_DOWN  4



int main()
{
	printf("Device initialized!\r\n");

	// VARIABLE DECLARATION
	int Status;
	ugv_driveMotor driveMotorInst;
	ugv_qei        driveMotorQeiInst;
	ugv_pwm        driveMotorPwmInst;
    PIDController  driveMotorPidInst;

	// DRIVE MOTOR INSTANCE INIT
	Status = driveMotor_Initialize(&driveMotorInst, &driveMotorPwmInst,
				                   &driveMotorQeiInst, &driveMotorPidInst);
	if(Status != XST_SUCCESS) {
		printf("Drive motor initialization failed!\r\n");
		return XST_FAILURE;
	}

	// MOTOR CONTROL PARAMETERS
	int   TEST_STATE;
	u8    driveMotor_manualDuty = 0;
	_Bool driveMotor_manualDir  = DRIVEMOTOR_FORWARD;

	// MAIN LOOP
	while(1)
	{
		driveMotor_manualSetDutyDir(&driveMotorInst, driveMotor_manualDuty, driveMotor_manualDir);

		// Print stats
		xil_printf("--------------------------------------------------\r\n");
		xil_printf("Current RPM: %d\r\n", driveMotorInst.currentRpm);
		if(driveMotorInst.currentDir == DRIVEMOTOR_REVERSE){
			xil_printf("Current Dir: REVERSE\r\n\n");
		}
		else {
			xil_printf("Current Dir: FORWARD\r\n\n");
		}

		// state machine
		switch (TEST_STATE)
		{

		}
	}
}
